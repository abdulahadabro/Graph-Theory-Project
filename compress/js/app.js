// Master
function closeOpenLeftPanel(){var e=$("#leftPanel");e.hasClass("closed")?e.removeClass("closed"):e.addClass("closed")}function createLeftPanelMenuButtons(){var e=$("#leftPanelMenu"),a="";a+="<div id='newMenuBtn' class='menuItem' onclick='createNewGraph()'><div class='menuIcon' /><div class='itemText'>New</div></div>",a+="<div id='openMenuBtn' class='menuItem' onclick='openNewGraph()' ><div class='menuIcon'/><div class='itemText'>Open</div></div>",a+="<div id='saveMenuBtn' class='menuItem' onclick='saveGraph()'  ><div class='menuIcon' /><div class='itemText'>Save</div></div>",$(e).html(a)}function creatLeftPanelDrawingButtons(){var e=$("#leftPanelMenu"),a="";a+="<div id='addNodeBtn' class='drawingMenuItem hiden' onclick='addNodeToGraph()'><div class='menuIcon' /><div class='itemText'>Add Node</div></div>";var t=$('<div class="row hiden"><div class="lable" >Node Name:</div><div class="userInput value"><input type="text" name="nodeName" min="1" value="v" id="nodeNameEdit" onkeyup="changeNodeNameEdit(this)" onchange="changeNodeNameEdit(this)"/></div></div>'),l=$('<div class="row hiden"><div class="lable" >Edge Weight:</div><div class="userInput value"><input type="number" name="edgeWeight" min="0" value="0" id="edgeWeightEdit" onkeyup="changeEdgeWeightEdit(this)" onchange="changeEdgeWeightEdit(this)"/></div></div>');$(e).append(a),$(e).append(t),$(e).append(l),$(e).find("#addNodeBtn").mousedown(function(e){IS_MOUSE_DOWN=!0,$(".graphArea.selected").addClass("grabbing")}),$(document).mouseup(function(e){if(IS_MOUSE_DOWN){var a=e.target.getAttribute("class");null!=a&&-1!=a.indexOf("svgContainer")&&-1!=a.indexOf("show")&&(console.log(e.screenX),addNodeToGraph({x:e.offsetX,y:e.offsetY}))}IS_MOUSE_DOWN=!1,$(".graphArea.selected").removeClass("grabbing")})}function createUserOptionPanel(e){var a=$('<div class="row"><div class="lable" >Selected Graph:</div><div id="selectedGraph" class="value">none</div></div>'),t=$("<div class='row comboboxHolder'><span>Other Graph:</span><div id='chartsCompobox' class='chartsCompobox value'></div>"),l=$("<div class='row comboboxHolder'><span>From node:</span><div id='fromNodeCompobox' class='nodesCompobox value'></div><span>To node:</span><div id='toNodeCompobox' class='nodesCompobox value'></div><br>"),n=($("<div class='button' onclick='evaluateGraph()'><div class='lable'>Evaluate</div></div>"),$("<div id='checkAll' ><input id='checkUnCheckAll' type='checkbox' name='mainChecker' onchange='checkUnCheckAll(this)' ><span>(un)check All</span></div>"),'<div id="node-name-weight">');n+='Node Name: <input type="text" name="nodeName" min="1" value="v" id="nodeNameEdit" onkeyup="changeNodeNameEdit(this)" onchange="changeNodeNameEdit(this)">',n+='Edge Weight: <input type="number" name="edgeWeight" min="0" value="0" id="edgeWeightEdit" onkeyup="changeEdgeWeightEdit(this)" onchange="changeEdgeWeightEdit(this)">';var i=$('<div class="leftUserOption"><div class="left-panel-header">Graph Information</div></div>'),o=$('<div class="general-info-details"></div>');o.append(a).append(t).append(l).append(n),i.append(o);var s=$('<div class="rightUserOption"></div>'),r=$("<div class='row'><div class='squared-checkbox'><input type='checkbox' id='isBipartile' name='userOptions'><label for='isBipartile'></label></div><span>Check if Bipartile</span><br>"),d=$("<div class='row'><div class='squared-checkbox'><input id='isPlanner' type='checkbox' name='userOptions' ><label for='isPlanner'></label></div><span>Check if Planner</span><br>"),h=$("<div class='row'><div class='squared-checkbox'><input id='isTree' type='checkbox' name='userOptions'><label for='isTree'></label></div><span>Check if Tree</span><br>"),c=$("<div class='row'><div class='squared-checkbox'><input id='isListAllPathes' type='checkbox' name='userOptions'><label for='isListAllPathes'></label></div><span>List all paths of 1,2,3,... n length</span><br>"),p=$("<div class='row'><div class='squared-checkbox'><input id='isListAllCycles'  type='checkbox' name='userOptions'><label for='isListAllCycles'></label></div><span>List all cycles (loops) of 3,4,,,,n length</span><br>");s.append(r).append(d).append(h).append(c).append(p);var u=$('<div class="lastUserOption"></div>'),v=$("<div class='row'><div class='squared-checkbox'><input id='isTestEuler' type='checkbox' name='userOptions'><label for='isTestEuler'></label></div><span>List all Euler paths or cycles</span><br>"),m=$("<div class='row'><div class='squared-checkbox'><input id='isTestHamilton' type='checkbox' name='userOptions'><label for='isTestHamilton'></label></div><span>List all Hamilton paths and cycles</span><br>"),g=$("<div class='row'><div class='squared-checkbox'><input id='isColorRequired' type='checkbox' name='userOptions'><label for='isColorRequired'></label></div><span>Color the graph</span><br>"),f=$("<div class='row'><div class='squared-checkbox'><input id='isIzomorphism' type='checkbox' name='userOptions'><label for='isIzomorphism'></label></div><span>Check Izomorphism with other graph</span>"),P=$("<div class='row'><div class='squared-checkbox'><input id='isShortestPath' type='checkbox' name='userOptions'><label for='isShortestPath'></label></div><span>Short Path between Two Nodes</span><br>");u.append(v).append(m).append(g).append(f).append(P);var N=$('<div class="checkbox-options"></div>').append(s).append(u),I=$('<div class="left-panel-header">Options</div>');e.append(i).append(I).append(N),initializeChartsCombobox(),initializeFromToNodesCombobox()}function initializeChartsCombobox(){var e=[];for(var a in MAIN_GRAPHS)e.push(MAIN_GRAPHS[a]);if(0==e.length)return $("#chartsCompobox").html(""),void(IZOMORPHISM_WITH_ID=null);for(var t='<select id="mCP" onchange="izomorphismChartInputChange(this)">',l=0;l<e.length;l++)t+='<option value="'+e[l].graphId+'">'+e[l].graphTitle+"</option>";t+="</select>",$("#chartsCompobox").html(t),IZOMORPHISM_WITH_ID=e[0].graphId}function initializeFromToNodesCombobox(){var e=CUURENT_OPEN_GRAPH,a=MAIN_GRAPHS[e];if(!a||0==a.allNodes.length)return $("#fromNodeCompobox").html(""),$("#toNodeCompobox").html(""),FROM_NODE_ID=null,void(TO_NODE_ID=null);for(var t=a.allNodes,l='<select id="fromNodeCB" onchange="fromNodeSPInputChange(this)">',n=0;n<t.length;n++)l+='<option value="'+t[n].id+'">'+t[n].name+"</option>";l+="</select>",$("#fromNodeCompobox").html(l);for(var l='<select id="toNodeCB" onchange="toNodeSPInputChange(this)">',n=0;n<t.length;n++)l+='<option value="'+t[n].id+'">'+t[n].name+"</option>";l+="</select>",$("#toNodeCompobox").html(l),FROM_NODE_ID=t[0].id,TO_NODE_ID=t[0].id}function fromNodeSPInputChange(e){var a=e.value;FROM_NODE_ID=a}function toNodeSPInputChange(e){var a=e.value;TO_NODE_ID=a}function izomorphismChartInputChange(e){var a=e.value;IZOMORPHISM_WITH_ID=a}function changeNodeNameEdit(e){e.value.length>0?NODE_NAME=e.value:e.value="v"}function changeEdgeWeightEdit(e){e.value>0?EDGE_WEIGHT=e.value:(e.value="0",EDGE_WEIGHT=null)}function createMainPageLayout(e){var a="";a+="<div id='mainPageInfoPanel' ></div>",a+="<div id='mainPageGraphsContainer'><div id='MainTabs'></div></div>",a+="<div id='secondPageInfoPanel'></div>",e.append($(a))}function checkUnCheckAll(e){var a=$("#mainPageInfoPanel").find("input");if(e.checked)for(t=0;t<a.length;t++)"userOptions"==a[t].name&&(a[t].checked=!0);else for(var t=0;t<a.length;t++)"userOptions"==a[t].name&&(a[t].checked=!1)}function evaluateGraph(e){if(e||(e=CUURENT_OPEN_GRAPH),$("#secondPageInfoPanel").html(""),null==e)return alert("Please Create/Open a gaph first!"),!1;if(setChartInfoSubPanel(e),0==MAIN_GRAPHS[e].getGraphSize())return!1;formGraphMatrix(MAIN_GRAPHS[e]),findAllDegrees(e);var a=MAIN_GRAPHS[e].nodesDegrees,t=[];for(key in a){var l=1==a[key]?"  "+a[key]+" Node ":"  "+a[key]+" Nodes ";t.push({label:"Degree of ("+key+")  ",value:l})}if(t.length>0&&createSubInfoPanel(e,{title:"Degree of Nodes",rows:t}),$("#isBipartile")[0].checked){var n=!0;$("#isColorRequired")[0].checked&&(n=!1),isGraphBipartitle(e,{isColorNodes:n}),createSubInfoPanel(e,{title:"Bipartite Test",rows:[{label:"Is Bipartite",value:null==MAIN_GRAPHS[e].isBipartite?"Not Evaluated !":MAIN_GRAPHS[e].isBipartite?"Yes":"No"}]})}if($("#isPlanner")[0].checked&&(isGraphPlanner(e),createSubInfoPanel(e,{title:"Planer Test",rows:[{label:"Is Planner",value:MAIN_GRAPHS[e].isPlanner?"Yes":"No"}]})),$("#isListAllPathes")[0].checked&&null!=FROM_NODE_ID&&null!=TO_NODE_ID){findAllPathesWithAllLengths(e,FROM_NODE_ID,TO_NODE_ID);t=[];for(PathLength in MAIN_GRAPHS[e].allPathes){c="";if((v=MAIN_GRAPHS[e].allPathes[PathLength]).length>0){1==v.length?c+="("+v.length+" Path found):":c+="("+v.length+" Paths found):",c+="<br>";for(u=0;u<v.length;u++)c+=v[u].toString(),c+="<br>";m={label:"Length "+PathLength,value:c};t.push(m)}}var i=getNodeOfId(e,FROM_NODE_ID),o=getNodeOfId(e,TO_NODE_ID);0==t.length?createSubInfoPanel(e,{title:"All Pathes (from: "+i.name+" - to: "+o.name+")",rows:[{label:"No Pathes between these two points",value:""}]}):createSubInfoPanel(e,{title:"All Pathes (from: "+i.name+" - to: "+o.name+")",rows:t})}if($("#isListAllCycles")[0].checked||$("#isTree")[0].checked){if(findAllCyclesWithAllLengths(e),$("#isListAllCycles")[0].checked){t=[];for(cycleLength in MAIN_GRAPHS[e].allCycles){c="";if((v=MAIN_GRAPHS[e].allCycles[cycleLength]).length>0){1==v.length?c+="("+v.length+" Cycle found):":c+="("+v.length+" Cycles found):",c+="<br>";for(u=0;u<v.length;u++)c+=v[u].toString(),c+="<br>";m={label:"Length "+cycleLength,value:c};t.push(m)}}0==t.length?createSubInfoPanel(e,{title:"All Cycles",rows:[{label:"No Cycles in the Graph",value:""}]}):createSubInfoPanel(e,{title:"All Cycles",rows:t})}if($("#isTree")[0].checked){var s=isGraphConnected(e),r=!1;for(cycleLength in MAIN_GRAPHS[e].allCycles)if((v=MAIN_GRAPHS[e].allCycles[cycleLength]).length>0){r=!0;break}var d=1==s&&0==r;createSubInfoPanel(e,{title:"Tree Test",rows:[{label:"Is Tree",value:d?"Yes":"No"}]})}}if($("#isTestEuler")[0].checked)if(TestForEuler(e),0==MAIN_GRAPHS[e].isEulerian)createSubInfoPanel(e,{title:"Euler Path or Cycle",rows:[{label:"Graph is NOT Eulerian",value:""}]});else{var t=[],h=MAIN_GRAPHS[e].isEulerPath?"Euler Paths":"Euler Cycles",c="";if((p=MAIN_GRAPHS[e].AllEulerTours.length)>0){1==p?MAIN_GRAPHS[e].isEulerPath?c+="("+p+" Path found):":c+="("+p+" Cycle found):":MAIN_GRAPHS[e].isEulerPath?c+="("+p+" Paths found):":c+="("+p+" Cycles found):",c+="<br>";for(u=0;u<p;u++)c+=(v=MAIN_GRAPHS[e].AllEulerTours[u]).toString(),c+="<br>";m={label:h,value:c};t.push(m)}0==t.length?createSubInfoPanel(e,{title:"Euler Path or Cycle",rows:[{label:"Graph is NOT Eulerian",value:""}]}):createSubInfoPanel(e,{title:"Euler Path or Cycle",rows:t})}if($("#isTestHamilton")[0].checked)if(TestForHamilton(e),0==MAIN_GRAPHS[e].isHamiltonian)createSubInfoPanel(e,{title:"Hamilton Path and Cycle",rows:[{label:"Graph is NOT Hamiltonian",value:""}]});else{var t=[],h="Hamilton Paths",p=MAIN_GRAPHS[e].AllHamiltonPaths.length,c="";if(p>0){c+=1==p?"("+p+" Path found):":"("+p+" Paths found):",c+="<br>";for(u=0;u<p;u++)c+=(v=MAIN_GRAPHS[e].AllHamiltonPaths[u]).toString(),c+="<br>";m={label:h,value:c};t.push(m)}var h="Hamilton Cycles",c="";if((p=MAIN_GRAPHS[e].AllHamiltonTours.length)>0){c+=1==p?"("+p+" Cycle found):":"("+p+" Cycles found):",c+="<br>";for(var u=0;u<p;u++){var v=MAIN_GRAPHS[e].AllHamiltonTours[u];c+=v.toString(),c+="<br>"}var m={label:h,value:c};t.push(m)}0==t.length?createSubInfoPanel(e,{title:"Hamilton Path and Cycle",rows:[{label:"Graph is NOT Hamiltonian",value:""}]}):createSubInfoPanel(e,{title:"Hamilton Path/Cycle",rows:t})}if($("#isColorRequired")[0].checked&&(colorGraphWithBacktraking(e),createSubInfoPanel(e,{title:"Coloring",rows:[{label:"num Of used colors",value:MAIN_GRAPHS[e].graphMinNumOfColors}]})),$("#isIzomorphism")[0].checked){var g=MAIN_GRAPHS[e].graphTitle,f=MAIN_GRAPHS[IZOMORPHISM_WITH_ID].graphTitle;if(null==IZOMORPHISM_WITH_ID||IZOMORPHISM_WITH_ID==e)createSubInfoPanel(e,{title:"Izomorphism Test for ( "+g+"  and  "+f+")",rows:[{label:"is Izomorphisim",value:"Yes , they are the same graph !"}]});else{var P=checkifIzomorphism(e,IZOMORPHISM_WITH_ID);0==P.isIzo?createSubInfoPanel(e,{title:"Izomorphism Test for ( "+g+"  and  "+f+")",rows:[{label:"is Izomorphisim",value:"No , they are not"},{label:"invariant",value:P.invariants[0]}]}):createSubInfoPanel(e,{title:"Izomorphism Test for ( "+g+"  and  "+f+")",rows:[{label:"is Izomorphisim",value:"They Could be"},{label:"invariant",value:"No invariants found"}]})}}if($("#isShortestPath")[0].checked&&null!=FROM_NODE_ID&&null!=TO_NODE_ID){var i=getNodeOfId(e,FROM_NODE_ID),o=getNodeOfId(e,TO_NODE_ID);FROM_NODE_ID==TO_NODE_ID?(MAIN_GRAPHS[e].shortestPath=[i.name],MAIN_GRAPHS[e].shortestPathCost=0):findShortPath(e,FROM_NODE_ID,TO_NODE_ID);var N=MAIN_GRAPHS[e].shortestPath,I=MAIN_GRAPHS[e].shortestPathCost;null==N?createSubInfoPanel(e,{title:"Shortest Path (from: "+i.name+" - to: "+o.name+")",rows:[{label:"No Path exists",value:""}]}):createSubInfoPanel(e,{title:"Shortest Path (from: "+i.name+" - to: "+o.name+")",rows:[{label:"Shortest Path",value:N.toString()},{label:"Shortest Path Distance",value:I}]})}}function createNewGraph(e){$("#MainTabs").show(),$("#mainPageInfoPanel").show(),$("#node-name-weight").show(),e||(e={}),e=$.extend(!0,{},GRAPH,e);var a=$("#mainPageGraphsContainer"),t=$("#MainTabs");if(NUM_OF_GRAPHS<20){NUM_OF_GRAPHS++,GRAPHS_ID_INC++;var l="graph"+GRAPHS_ID_INC,n=$("<div id="+l+"Header class='graphAreaHeader'><div class='title'>Graph"+GRAPHS_ID_INC+" </div><div class='changeBetween'></div><div class='closeGraph'></div></div>");n.click(function(e){if("closeGraph"==e.target.className)if($("#"+l+"Header").remove(),$("#"+l+"Area").remove(),delete MAIN_GRAPHS[l],NUM_OF_GRAPHS--,initializeChartsCombobox(),NUM_OF_GRAPHS>0){var a=0;for(var t in MAIN_GRAPHS)if(MAIN_GRAPHS.hasOwnProperty(t)){if(++a<NUM_OF_GRAPHS)continue;selectGraph(t);break}}else $(".drawingMenuItem").addClass("hiden"),$(".row").addClass("hiden"),$(".row #selectedGraph").html("none"),initializeFromToNodesCombobox();else-1!==e.target.className.indexOf("changeBetween")?document.querySelector("#"+l+"Area .svgContainer").hasClass("show")?(document.querySelector("#"+l+"Area .svgContainer").removeClass("show"),$("#"+l+"Area .graphTextArea").addClass("show"),$("#"+l+"Header .changeBetween").addClass("graphIcon")):(document.querySelector("#"+l+"Area .svgContainer").addClass("show"),$("#"+l+"Area .graphTextArea").removeClass("show"),$("#"+l+"Header .changeBetween").removeClass("graphIcon")):selectGraph(l);e.stopPropagation()});var i=$("<div id="+l+"Area class='graphArea' ><svg class='svgContainer show' xmlns='http://www.w3.org/2000/svg' // onmousedown='hideAllNodeTooltip(evt);',></svg><div class='graphTextArea' >"+e.fileContent+"</div></div>");a.append(i),i.find(".graphTextArea").text(e.fileContent);i.find("svg").css("min-height","534px"),i.find(".graphTextArea").css("min-height","534px"),t.append(n),MAIN_GRAPHS[l]||(MAIN_GRAPHS[l]=$.extend(!0,{},e,{graphTitle:"Graph"+GRAPHS_ID_INC,graphId:l})),null!=MAIN_GRAPHS[l].graphMatrix&&drawGraphByMatrix(l),selectGraph(l),initializeChartsCombobox()}else alert("Maximum number of open graphs is 5 ,, please close to continue")}function selectGraph(e){$(".graphAreaHeader").removeClass("selected"),$(".graphArea").removeClass("selected"),$("#"+e+"Header").addClass("selected"),$("#"+e+"Area").addClass("selected"),CUURENT_OPEN_GRAPH=e;var a=$("#"+e+"Header").find(".title").html();$(".row #selectedGraph").html(a),initializeFromToNodesCombobox(),$(".drawingMenuItem").removeClass("hiden"),$(".row").removeClass("hiden"),evaluateGraph(e)}function saveGraph(){var e=CUURENT_OPEN_GRAPH;if(null!=e){var a='<?xml version="1.0" encoding="UTF-8"?>\n';a+="\x3c!-- This file was written by the Grapher project using GraphML format--\x3e\n",a+='<graphml xmlns="http://graphml.graphdrawing.org/xmlns"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ',a+='xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">\n',a+='<key id="d0" for="node" attr.name="color" attr.type="string"/>\n',a+='<key id="d1" for="edge" attr.name="weight" attr.type="double"/>\n',a+='<graph id="'+e+'" edgedefault="undirected">\n';for(l=0;l<MAIN_GRAPHS[e].allNodes.length;l++){var t=MAIN_GRAPHS[e].allNodes[l];a+='<node id="'+t.name+'">\n',null!=t.color&&(a+='<data key="d0">'+t.color+"</data>"),a+="</node>\n"}for(var l=0;l<MAIN_GRAPHS[e].allEdges.length;l++){var n=MAIN_GRAPHS[e].allEdges[l],i=void 0===n.id?"e"+l:n.id,o=getNodeOfId(e,n.source);null==o&&(o={name:n.source});var s=getNodeOfId(e,n.target);null==s&&(s={name:n.target}),a+='<edge id="'+i+'" source="'+o.name+'" target="'+s.name+'">\n',null!=n.weight&&(a+='<data key="d1">'+n.weight+"</data>\n"),a+="</edge>\n"}a+="</graph>\n",a+="</graphml>\n";var r=document.createElement("a"),d=MAIN_GRAPHS[e].graphTitle+"FileGraphml.xml",r=document.createElement("a"),h=new Blob([a],{type:"text/plain"});r.setAttribute("href",window.URL.createObjectURL(h)),r.setAttribute("download",d),r.dataset.downloadurl=["text/plain",r.download,r.href].join(":"),r.draggable=!0,r.classList.add("dragout"),r.click()}else alert("So selected Graph to save, Create one!")}function saveGraphAS(){connectNodes(CUURENT_OPEN_GRAPH)}function addNodeToGraph(e){if(e||(e={x:100,y:50}),null!==CUURENT_OPEN_GRAPH){var a={id:(new Date).getTime()+"",name:NODE_NAME+NODES_COUNTER,x:e.x,y:e.y};addNode(CUURENT_OPEN_GRAPH,a),MAIN_GRAPHS[CUURENT_OPEN_GRAPH].allNodes.push({id:a.id,name:a.name}),NODES_COUNTER++,formGraphMatrix(MAIN_GRAPHS[CUURENT_OPEN_GRAPH]),initializeFromToNodesCombobox()}}$(document).ready(function(){hackSVG(),createLeftPanelMenuButtons(),creatLeftPanelDrawingButtons(),createMainPageLayout($("#mainPageContainer")),createUserOptionPanel($("#mainPageInfoPanel"))});
// Graph Theory
function checkifIzomorphism(e,r){var t={isIzo:!1,invariants:[]},n=MAIN_GRAPHS[e].allNodes,s=MAIN_GRAPHS[e].allEdges,a=MAIN_GRAPHS[r].allNodes,l=MAIN_GRAPHS[r].allEdges;if(n.length!=a.length)return t.isIzo=!1,t.invariants.push("Number of vertices is not equal"),t;if(s.length!=l.length)return t.isIzo=!1,t.invariants.push("Number of edges is not equal"),t;findAllDegrees(e),findAllDegrees(r);var i=MAIN_GRAPHS[e].nodesDegrees,o=MAIN_GRAPHS[r].nodesDegrees,h=0,A=0;for(key in i)h++;for(key in o)A++;if(h!=A)return t.isIzo=!1,t.invariants.push("Nodes degrees are different"),t;for(key in i)if(i[key]!=o[key])return t.isIzo=!1,t.invariants.push("Nodes degrees are different"),t;findAllCyclesWithAllLengths(e),findAllCyclesWithAllLengths(r);var d=MAIN_GRAPHS[e].allCycles,g=MAIN_GRAPHS[r].allCycles;h=0,A=0;for(key in d)h++;for(key in g)A++;if(h!=A)return t.isIzo=!1,t.invariants.push("Cycles Lengths are different"),t;for(key in d)if(d[key].length!=g[key].length)return t.isIzo=!1,t.invariants.push("Cycles Lengths are different"),t;return t.isIzo=!0,t.invariants.push("They could be izomorphism"),t}function findShortPath(e,r,t){for(var n=[],s=[],a=null,l=null,i=0;i<MAIN_GRAPHS[e].allNodes.length;i++){var o=$.extend(!0,{},DiVertex),h=MAIN_GRAPHS[e].allNodes[i];o.createDiVertex(h.id,h.name),n.push(o),h.id==r&&(a=i),h.id==t&&(l=i)}for(i=0;i<MAIN_GRAPHS[e].allEdges.length;i++){var A=$.extend(!0,{},DiEdge),d=MAIN_GRAPHS[e].allEdges[i],g=null==d.weight?0:d.weight;A.createDiEdge("Edge_"+i,n[d.sourceIndex],n[d.targetIndex],parseFloat(g)),s.push(A)}var f=$.extend(!0,{},DiGraph);f.createDiGraph(n,s);var N=$.extend(!0,{},DijkstraAlgorithm);N.createDijkstraAlgorithm(f),N.execute(n[a]);var u=N.getPath(n[l]);if(MAIN_GRAPHS[e].shortestPath=null,MAIN_GRAPHS[e].shortestPathCost=null,null==u.path)console.log("No Path exists");else{MAIN_GRAPHS[e].shortestPath=[],MAIN_GRAPHS[e].shortestPathCost=u.distance;for(key in u.path)MAIN_GRAPHS[e].shortestPath.push(u.path[key].name)}}function colorGraphWithBacktraking(e){for(var r=MAIN_GRAPHS[e].allNodes.length,t=MAIN_GRAPHS[e].graphMatrix.matrix,n=[],s=[],a=0;a<t.length+1;a++)n.push(0),s.push(0);s.pop(),t.unshift(s);for(a=0;a<t.length;a++)t[a].unshift(0);MAIN_GRAPHS[e].graphColors=null;for(var l=1;l<=r;l++){var i=$.extend(!0,{},BackTrackGraphColorer);if(i.createGrColor(r,l,t,n,e),i.mColoring(1),0!=i.soln){for(var n=[],a=1;a<=i.n;a++)n.push(i.x[a]-1);reColorNodes(e,n),MAIN_GRAPHS[e].graphMinNumOfColors=l,MAIN_GRAPHS[e].graphColors=n;break}}}function isGraphConnected(e){var r=MAIN_GRAPHS[e].allNodes.length,t=MAIN_GRAPHS[e].allEdges.length,n=$.extend(!0,{},E_Graph);n.createEulerGraph(r);for(s=0;s<MAIN_GRAPHS[e].allNodes.length;s++)n.addVertix(MAIN_GRAPHS[e].allNodes[s].name);for(var s=0;s<t;s++){var a=MAIN_GRAPHS[e].allEdges[s].source,l=getNodeOfId(e,a).name,i=MAIN_GRAPHS[e].allEdges[s].target,o=getNodeOfId(e,i).name,h=MAIN_GRAPHS[e].allEdges[s].weight;n.addEdge(l,o,h)}return MAIN_GRAPHS[e].isConnected=!(r>1&&0==t)&&(1==r&&0==t||isConnected(n)),MAIN_GRAPHS[e].isConnected}function findAllDegrees(e){var r=MAIN_GRAPHS[e].allNodes.length,t=MAIN_GRAPHS[e].allEdges.length,n=$.extend(!0,{},E_Graph);n.createEulerGraph(r);for(h=0;h<t;h++){var s=MAIN_GRAPHS[e].allEdges[h].source,a=getNodeOfId(e,s).name,l=MAIN_GRAPHS[e].allEdges[h].target,i=getNodeOfId(e,l).name,o=MAIN_GRAPHS[e].allEdges[h].weight;n.addEdge(a,i,o)}MAIN_GRAPHS[e].nodesDegrees={};for(var h=0;h<n.verts.length;h++){var A=n.verts[h].degree;MAIN_GRAPHS[e].nodesDegrees[A]?MAIN_GRAPHS[e].nodesDegrees[A]++:MAIN_GRAPHS[e].nodesDegrees[A]=1}n.verts.length<r&&(MAIN_GRAPHS[e].nodesDegrees[0]=r-n.verts.length)}function findAllCyclesWithAllLengths(e){for(var r=MAIN_GRAPHS[e].allNodes,t=MAIN_GRAPHS[e].graphMatrix.matrix,n=[],s=0;s<r.length;s++)n.push(r[s].name);var a=$.extend(!0,{},ElementaryCyclesSearch);a.createElementaryCyclesSearch(t,n);var l=a.getElementaryCycles();MAIN_GRAPHS[e].allCycles={};for(s=0;s<l.length;s++){var i=l[s];if(i.push(i[0]),i.length>3&&!isCycleExist(i,MAIN_GRAPHS[e].allCycles)){var o=i.length-1;MAIN_GRAPHS[e].allCycles[o]||(MAIN_GRAPHS[e].allCycles[o]=[]),MAIN_GRAPHS[e].allCycles[o].push(i)}}}function findAllPathesWithAllLengths(e,r,t){for(var n=MAIN_GRAPHS[e].allNodes,s=n.length,a=MAIN_GRAPHS[e].graphMatrix.matrix,l=null,i=null,o=0;o<n.length&&(n[o].id!=r||(l=o,null==i))&&(n[o].id!=t||(i=o,null==l));o++);MAIN_GRAPHS[e].allPathes={};for(o=1;o<=s;o++){var h=o;pathsList=[],paths=[],countALLPathes(n,a,l,i,h,s),MAIN_GRAPHS[e].allPathes[h]=$.extend(!0,[],pathsList)}}function countALLPathes(e,r,t,n,s,a){if(paths.push(e[t].name),0==s)return e[t].name==e[n].name?void pathsList.push(paths.toString()):void 0;for(var l=0;l<a;l++)1==r[t][l]&&(countALLPathes(e,r,l,n,s-1,a),paths.pop())}function isGraphPlanner(e){var r=$.extend(!0,{},Graph);r.createGraphFromEdges(MAIN_GRAPHS[e].allEdges);var t=$.extend(!0,{},GraphTraverser);t.createGraphTraverser(r);var n=t.findCycle();null==n?(MAIN_GRAPHS[e].isPlanner=!0,console.log("Ayham :: planar")):testPlanarity(r,n)?(MAIN_GRAPHS[e].isPlanner=!0,console.log("Ayham :: planar")):(MAIN_GRAPHS[e].isPlanner=!1,console.log("Ayham :: nonplanar"))}function isGraphBipartitle(e,r){var t=!1;r&&r.isColorNodes&&(t=r.isColorNodes);for(var n=MAIN_GRAPHS[e].allNodes.length,s=MAIN_GRAPHS[e].graphMatrix.matrix,a=[],l=MAIN_GRAPHS[e].allNodes,i=0;i<l.length;i++)a.push(-1);a[0]=1;var o=[];for(o.push(0);0!=o.length;)for(var h=o.shift(),A=0;A<n;++A)if(1==s[h][A]&&-1==a[A])a[A]=1-a[h],o.push(A);else if(1==s[h][A]&&a[A]==a[h])return MAIN_GRAPHS[e].isBipartite=!1,reColorNodes(e),!1;return MAIN_GRAPHS[e].isBipartite=!0,t?reColorNodes(e,a):reColorNodes(e),!0}function isCycleExist(e,r){var t=e.length-1;for(c in r){var n=r[c];if(c==t)for(var s=0;s<n.length;s++)if(isSameCycle(n[s],e))return!0}return!1}function isSameCycle(e,r){if(e.length!=r.length)return!1;for(var t=0;t<e.length;t++)if(!r.includes(e[t]))return!1;return!0}var BackTrackGraphColorer=new function(){this.G,this.x,this.n,this.m,this.soln=0,this.createGrColor=function(e,r,t,n){this.n=e,this.G=t,this.x=n,this.m=r},this.mColoring=function(e){for(var r=1;r<=this.n;r++){if(this.next_color(e),0==this.x[e])return 0;if(e==this.n)return this.soln++,1;if(1==this.mColoring(e+1))return 1}},this.next_color=function(e){for(;;){var r=1;if(this.x[e]=(this.x[e]+1)%(this.m+1),0==this.x[e])return;for(r=1;r<=this.n&&(r==e||0==this.G[r][e]||this.x[e]!=this.x[r]);r++);if(r==this.n+1)return}}},pathsList=[],paths=[];
// Variables
var NUM_OF_GRAPHS=0,GRAPHS_ID_INC=0,NODES_COUNTER=0,CUURENT_OPEN_GRAPH=null,IS_CONNECT_EVENT=0,NODE_1_TOCONNECT=null,NODE_2_TOCONNECT=null,MAIN_GRAPHS={},IS_MOUSE_DOWN=!1,NODE_NAME="V",EDGE_WEIGHT=null,IZOMORPHISM_WITH_ID=null,COLORS_LIST=["LightCoral","LightSkyBlue","SpringGreen","Wheat","Orange","LightGrey","yellow"],DEFAULT_NODE_COLOR="#334760";
// Graph Functions
function getGraphMatrix(){var t=["a","b","c","d"];return{nodes:t,matrix:[[0,1,1,0],[1,0,0,1],[1,0,0,1],[0,1,1,0]],size:t.length}}function formGraphMatrix(t){for(var e=[],r=0;r<t.allNodes.length;r++)e.push(t.allNodes[r].id);t.nodesIds=e;for(var a=e.length,n=zeroMatrix([a,a]),r=0;r<t.allEdges.length;r++)t.allEdges[r].sourceIndex=e.indexOf(t.allEdges[r].source),t.allEdges[r].targetIndex=e.indexOf(t.allEdges[r].target),n[t.allEdges[r].sourceIndex][t.allEdges[r].targetIndex]++,t.allEdges[r].targetIndex!=t.allEdges[r].sourceIndex&&n[t.allEdges[r].targetIndex][t.allEdges[r].sourceIndex]++;return t.graphMatrix={nodesIds:e,matrix:n,size:a},t.graphMatrix}function zeroMatrix(t){for(var e=[],r=0;r<t[0];++r)e.push(1==t.length?0:zeroMatrix(t.slice(1)));return e}function drawGraphByMatrix(t){for(var e=MAIN_GRAPHS[t].allNodes,r=MAIN_GRAPHS[t].graphMatrix.matrix,a=[],n=0;n<e.length;n++){var i=$.extend(!0,{},{x:100,y:50},e[n]);a.push(addNode(t,i))}for(n=0;n<e.length;n++)for(var l=0;l<e.length;l++)if(1==r[n][l]){var s=getEdgeOptions(t,a[n],a[l]);connectTwoNodes(t,a[n],a[l],s,!0)}bringNodesToFront(t),randomlySpreadNodes(t)}function bringNodesToFront(t){for(var e=MAIN_GRAPHS[t].allSVGNodes,r=0;r<e.length;r++){var a=e[r].nodeSvg;a.parentElement.appendChild(a)}}function randomlySpreadNodes(t){var e=MAIN_GRAPHS[t].allSVGNodes,r=(MAIN_GRAPHS[t].getGraphSize(),$("#"+t+"Area"));setRandomPos(e,r.parent().width(),r.parent().height()-50,2*MAIN_GRAPHS[t].radius),updateLinesPositions(t)}function updateNodePosition(t,e,r,a,n){t||(t=CUURENT_OPEN_GRAPH),e.nodeSvg&&(e=e.nodeSvg);var i=$(e).find("circle")[0];i.setAttribute("cx",r),i.setAttribute("cy",a);var l=$(e).find("text")[0];l.setAttribute("x",r),l.setAttribute("y",a);var s;s=n||parseFloat(i.getAttribute("r"));var o=$(e).find("rect")[0];o.setAttribute("x",r-s),o.setAttribute("y",a-s-10);var d=$(e).find("ellipse")[0];d.setAttribute("cx",r-s),d.setAttribute("cy",a);var u=$(e).find(".connect")[0];u.setAttribute("x",r-s+2),u.setAttribute("y",a-s-4);var h=$(e).find(".edit")[0];h.setAttribute("x",r-s+2+16),h.setAttribute("y",a-s-4);var g=$(e).find(".delete")[0];g.setAttribute("x",r-s+2+32),g.setAttribute("y",a-s-4)}function setRandomPos(t,e,r,a){var n=new Array;$(t).each(function(){for(var t=!0,i=0;t;){i++,fixLeft=Math.round(Math.random()*(e-2*a))+a/2,fixTop=Math.round(Math.random()*(r-2*a))+a/2,updateNodePosition(void 0,$(this)[0].nodeSvg,fixLeft+a/2,fixTop+a/2);var l={top:fixTop,left:fixLeft,width:a,height:a};t=!1;for(var s=0;s<n.length;s++){if(overlap(l,n[s],a)&&!(i>60)){t=!0;break}t=!1}}n.push(l)})}function overlap(t,e,r){var a=t.left,n=e.top,i=n+t.height,l=a+t.width,s=t.left,o=t.top,d=o+t.height,u=s+t.width,h=r;return!(i+h<o||n>d+h||l+h<s||a>u+h)}function handleNodeKeys(t){if(t.keyList)for(var e=0;e<t.keyList.length;e++){var r=t.keyList[e];if("node"==r.keyFor&&"color"==r.keyName)for(var a=r.id,n=r.keyDefault,i=0;i<t.allNodes.length;i++){var l=t.allNodes[i];null!=l.data&&l.data.key==a&&null!=l.data.value?l.color=l.data.value:null!=n&&(l.color=n)}}}function handleEdgeKeys(t){if(t.keyList)for(var e=0;e<t.keyList.length;e++){var r=t.keyList[e];if("edge"==r.keyFor&&"weight"==r.keyName)for(var a=r.id,n=r.keyDefault,i=0;i<t.allEdges.length;i++){var l=t.allEdges[i];null!=l.data&&l.data.key==a&&(null!=l.data.value?"int"==r.keyType?l.weight=parseInt(l.data.value):l.weight=parseFloat(l.data.value):null!=n&&("int"==r.keyType?l.weight=parseInt(n):l.weight=parseFloat(n)))}}}function getEdgeOptions(t,e,r){for(var a=0;a<MAIN_GRAPHS[t].allEdges.length;a++){var n=MAIN_GRAPHS[t].allEdges[a];if(this.source=null,this.target=null,n.source==e.nodeId&&n.target==r.nodeId||n.source==r.nodeId&&n.target==e.nodeId)return n}return{weight:null}}function isEgdeExistBetweenTwoNodes(t,e,r){for(var a=$(e).parent()[0].getAttribute("nodeId"),n=$(r).parent()[0].getAttribute("nodeId"),i=MAIN_GRAPHS[t].allEdges,l=0;l<i.length;l++){var s=i[l].source,o=i[l].target;if(a==s&&n==o||a==o&&n==s)return!0}return!1}function isEgdeAlreadyDrawn(t,e,r){for(var a=$(e).parent()[0].getAttribute("nodeId"),n=$(r).parent()[0].getAttribute("nodeId"),i=MAIN_GRAPHS[t].allSVGEdges,l=0;l<i.length;l++){var s=i[l].source,o=i[l].target;if(a==s&&n==o||a==o&&n==s)return!0}return!1}function getNodeOfId(t,e){for(var r=MAIN_GRAPHS[t].allNodes,a=0;a<r.length;a++)if(r[a].id==e)return r[a];return null}var GRAPH=new function(){this.id=null,this.edgedefault="undirected",this.graphTitle=null,this.graphId=null,this.graphMatrix=null,this.allNodes=new Array,this.allEdges=new Array,this.radius=30,this.fileContent="",this.allSVGEdges=[],this.allSVGNodes=[],this.keyList=[],this.isBipartite=null,this.isPlanner=null,this.allPathes={},this.allCycles={},this.isEulerian=!1,this.isEulerPath=!1,this.AllEulerTours=[],this.isHamiltonian=!1,this.AllHamiltonPaths=[],this.AllHamiltonTours=[],this.graphMinNumOfColors=null,this.graphColors=null,this.isConnected=!1,this.nodesDegrees={},this.shortestPath=null,this.shortestPathCost=null,this.getGraphSize=function(){return this.allNodes.length}},NODE=new function(){this.id=null,this.name=null,this.data=null,this.color=null},EDGE=new function(){this.id=null,this.source=null,this.target=null,this.weight=null,this.directed=!1,this.data=null},KEY=new function(){this.id=null,this.keyFor=null,this.keyName=null,this.keyType=null,this.keyDefault=null};
// File Handler
function openNewGraph(){if(window.File&&window.FileReader&&window.FileList&&window.Blob){document.getElementById("files").addEventListener("change",handleFileSelect,!1);var e=document.getElementById("drop_zone");e.addEventListener("dragover",handleDragOver,!1),e.addEventListener("drop",handleFileDrageSelect,!1),$("#openFileContainer #files")[0].value="",$("#openFileContainer").addClass("show"),$("#openFileContainer").bind("click",function(e){e.target===e.currentTarget&&e.target===this&&$("#openFileContainer").removeClass("show"),e.stopPropagation()})}else alert("The File APIs are not fully supported in this browser.")}function handleFileSelect(e){readSelectedFile(e.target.files)}function handleFileDrageSelect(e){e.stopPropagation(),e.preventDefault(),readSelectedFile(e.dataTransfer.files)}function handleDragOver(e){e.stopPropagation(),e.preventDefault(),e.dataTransfer.dropEffect="copy"}function readSelectedFile(e){for(var t,a=0;t=e[a];a++){var r=new FileReader;r.onerror=errorHandler,r.onabort=function(e){alert("File read cancelled")},r.onloadstart=function(e){$("#openFileDaialog .spinner").addClass("show")},r.onload=function(e){return function(t){var a=t.target.result,r=escape(e.name);$("#openFileDaialog .spinner").removeClass("show"),$("#openFileContainer").removeClass("show"),parseSelectedFile(a,r)}}(t),r.readAsText(t)}}function errorHandler(e){switch(e.target.error.code){case e.target.error.NOT_FOUND_ERR:alert("File Not Found!");break;case e.target.error.NOT_READABLE_ERR:alert("File is not readable");break;case e.target.error.ABORT_ERR:break;default:alert("An error occurred reading this file.")}}function updateProgress(e){e.lengthComputable&&Math.round(e.loaded/e.total*100)<100&&$()}function parseSelectedFile(e,t){var a=$.parseXML(e),r=$(a),n=r.find("graph"),i=[];$(r.find("key")).each(function(){var e=this.id?this.id:null,t=$(this).attr("for")?$(this).attr("for"):null,a=$(this).attr("attr.name")?$(this).attr("attr.name"):null,r=$(this).attr("attr.type")?$(this).attr("attr.type"):null,n=null;if($(this).find("default")[0]){var l=$(this).find("default")[0].innerHTML;n=l||null}var d=$.extend(!0,{},KEY,{id:e,keyFor:t,keyName:a,keyType:r,keyDefault:n});i.push(d)});for(var l=0;l<n.length;l++){var d=$(n[l]),o={id:d.attr("id")?d.attr("id"):(new Date).getTime()+"",graphTitle:d.attr("id")?d.attr("id"):t,fileContent:e,edgedefault:d.attr("edgedefault")?d.attr("id"):"undirected",allNodes:[],allEdges:[]};i.length>0&&(o.keyList=i),$(d).find("node").each(function(){var e=this.id?this.id:(new Date).getTime()+"",t=this.name?this.name:this.id,a=null,r=$(this).find("data")[0];r&&(a={key:$(r).attr("key"),value:r.innerHTML?r.innerHTML:null});var n=$.extend(!0,{},NODE,{id:e,name:t,data:a});o.allNodes.push(n)}),$(d).find("edge").each(function(){var e=$(this).attr("id")?$(this).attr("id"):null,t=$(this).attr("source"),a=$(this).attr("target"),r=null,n=$(this).find("data")[0];n&&(r={key:$(n).attr("key"),value:n.innerHTML?n.innerHTML:null});var i=$.extend(!0,{},EDGE,{id:e,source:t,target:a,data:r});o.allEdges.push(i)}),handleNodeKeys(o),handleEdgeKeys(o),formGraphMatrix(o),createNewGraph(o)}}
// Drawing Functions
function addNode(e,t){t||(t={id:(new Date).getTime()+"",name:"node",x:100,y:50});var i=MAIN_GRAPHS[e].radius,n=makeSVG("g",{class:"nodeGroup",nodeId:t.id}),r=t.color?t.color:DEFAULT_NODE_COLOR,l=makeSVG("circle",{cx:t.x,cy:t.y,r:i,stroke:"#262C37","stroke-width":3,fill:r,class:"node"});if(n.appendChild(l),t.name){var a=makeSVG("text",{x:t.x,y:t.y,"text-anchor":"middle",stroke:"black","stroke-width":0,fill:"#fff",class:"nodeName"},t.name);n.appendChild(a)}var s=makeSVG("ellipse",{cx:t.x-i,cy:t.y,rx:"5",ry:"5",style:"fill:black;stroke:black;stroke-width:1",onmouseover:"showNodeTooltip(evt,true);",onmousedown:"showNodeTooltip(evt);"});n.appendChild(s);var o=makeSVG("rect",{x:t.x+60,y:t.y,width:"51",height:"25",fill:"#63caba","text-anchor":"middle",class:"nodeTootltip",visibility:"hidden"});n.appendChild(o);var d=makeSVG("image",{x:t.x-i+2,y:t.y-i-4,height:"14px",width:"14px",class:"buttons connect",href:"img/connect-from.png",xlink:href="img/connect-from.png",visibility:"hidden"});n.appendChild(d);var g=makeSVG("image",{x:t.x-i+2+16,y:t.y-i-4,height:"14px",width:"14px",class:"buttons edit",href:"img/edit.png",xlink:href="img/edit.png",visibility:"hidden"});n.appendChild(g),$(g).bind("mousedown",function(t,i){var n=$(t.target).parent(),r=NODE_NAME;$($(n)[0]).find(".nodeName").text()!=r&&isNodeNameUsed(e,r)&&(r+=NODES_COUNTER++),$($(n)[0]).find(".nodeName").text(r);for(var l=$(n)[0].getAttribute("nodeId"),a=0;a<MAIN_GRAPHS[e].allSVGNodes.length;a++)if(MAIN_GRAPHS[e].allSVGNodes[a].nodeId==l){MAIN_GRAPHS[e].allSVGNodes[a].nodeText=r;break}array=MAIN_GRAPHS[e].allNodes;for(a=0;a<array.length;a++)if(array[a].id==l){array[a].name=r;break}initializeFromToNodesCombobox()});var u=makeSVG("image",{x:t.x-i+2+32,y:t.y-i-4,height:"14px",width:"14px",class:"buttons delete",href:"img/small_delete.png",xlink:href="img/small_delete.png",visibility:"hidden"});n.appendChild(u),$(u).bind("mousedown",function(t,i){var n=$(t.target).parent(),r=$(n)[0].getAttribute("nodeId");deleteAllConnectedEdges(e,r);for(l=0;l<MAIN_GRAPHS[e].allSVGNodes.length;l++)if(MAIN_GRAPHS[e].allSVGNodes[l].nodeId==r){MAIN_GRAPHS[e].allSVGNodes[l].nodeSvg.remove(),MAIN_GRAPHS[e].allSVGNodes.splice(l,1);break}for(var l=0;l<MAIN_GRAPHS[e].allNodes.length;l++)if(MAIN_GRAPHS[e].allNodes[l].id==r){MAIN_GRAPHS[e].allNodes.splice(l,1);break}formGraphMatrix(MAIN_GRAPHS[e]),initializeFromToNodesCombobox()}),$("#"+e+"Area .svgContainer").append(n),$(d).bind("mousedown",function(e,t){0==IS_CONNECT_EVENT?($(".graphArea.selected").addClass("connecting"),setConnectIcon(e,!0),NODE_1_TOCONNECT=$(e.target).parent().find("circle")[0],IS_CONNECT_EVENT=1):1==IS_CONNECT_EVENT&&(hideNodeTooltip(e),$(".graphArea.selected").removeClass("connecting"),setConnectIcon(e,!1),NODE_2_TOCONNECT=$(e.target).parent().find("circle")[0],connectTwoNodes(CUURENT_OPEN_GRAPH,NODE_1_TOCONNECT,NODE_2_TOCONNECT,void 0,!1),IS_CONNECT_EVENT=0,NODE_1_TOCONNECT=null,NODE_2_TOCONNECT=null)}),$(l).draggable().bind("mousedown",function(e,t){}).bind("drag",function(t,i){var n=i.position,r=$(this),l=r.prop("r").baseVal.value,a=n.left-parseInt(r.css("left")),s=n.top-parseInt(r.css("top")),o=r.prop("cx").baseVal.value+a,d=r.prop("cy").baseVal.value+s;updateNodePosition(e,r.parent(),o,d,l),updateLinesPositions()});var c={nodeId:t.id,nodeText:t.name,nodeSvg:n,radius:i};return MAIN_GRAPHS[e].allSVGNodes||(MAIN_GRAPHS[e].allSVGNodes=[]),MAIN_GRAPHS[e].allSVGNodes.push(c),c}function makeSVG(e,t,i){var n=document.createElementNS("http://www.w3.org/2000/svg",e);for(var r in t)n.setAttribute(r,t[r]);return i&&(n.textContent=i),n}function connectTwoNodes(e,t,i,n,r){n||(n={weight:EDGE_WEIGHT});var l=t,a=i;void 0!==t.nodeSvg&&(l=t.nodeSvg.firstChild,a=i.nodeSvg.firstChild);var s=l==a;if(!r&&isEgdeExistBetweenTwoNodes(e,l,a))return!1;if(isEgdeAlreadyDrawn(e,l,a))return!1;var o,d=makeSVG("g",{class:"edgeGroup"}),g=parseFloat(l.getAttribute("cx")),u=parseFloat(l.getAttribute("cy")),c=parseFloat(a.getAttribute("cx")),A=parseFloat(a.getAttribute("cy")),p=(g+c)/2,v=(u+A)/2;if(s){var b=l.getAttribute("cx"),h=l.getAttribute("cy");o=makeSVG("path",{d:"M"+b+" "+h+" c 0 -140, -140 60, 0 0",stroke:"black","stroke-width":2,fill:"none",class:"nodesLine loop"}),p=b-52,v=h-30}else o=makeSVG("line",{x1:l.getAttribute("cx"),y1:l.getAttribute("cy"),x2:a.getAttribute("cx"),y2:a.getAttribute("cy"),stroke:"black","stroke-width":2,fill:"blue",class:"nodesLine"}),p=(g+c)/2,v=(u+A)/2;d.appendChild(o);var f=makeSVG("text",{x:p-10,y:v-5,"text-anchor":"middle","font-size":"13px",stroke:"black","stroke-width":1,class:"edgeWeight"},n.weight?n.weight:"");d.appendChild(f);var N=makeSVG("ellipse",{cx:p,cy:v,rx:"5",ry:"5",style:"fill:#FBA026;stroke:#F37934;stroke-width:2",onmouseover:"showEdgeTooltip(evt,true);",onmousedown:"showEdgeTooltip(evt);"});d.appendChild(N);var S=makeSVG("rect",{x:p+60,y:v,width:"37",height:"20",fill:"#63caba","text-anchor":"middle",class:"nodeTootltip",visibility:"hidden"});d.appendChild(S);var m=makeSVG("image",{x:p-2,y:v-27,height:"14px",width:"14px",class:"buttons edit",href:"img/edit.png",xlink:href="img/edit.png",visibility:"hidden"});d.appendChild(m),$(m).bind("mousedown",function(t,i){var n=$(t.target).parent(),r=$(n)[0].getAttribute("node1Id"),l=$(n)[0].getAttribute("node2Id");editEdgeWeight(e,r,l)});var G=makeSVG("image",{x:p+15,y:v-27,height:"14px",width:"14px",class:"buttons delete",href:"img/small_delete.png",xlink:href="img/small_delete.png",visibility:"hidden"});d.appendChild(G),$(G).bind("mousedown",function(t,i){var n=$(t.target).parent(),r=$(n)[0].getAttribute("node1Id"),l=$(n)[0].getAttribute("node2Id");deleteEdge(e,r,l),formGraphMatrix(MAIN_GRAPHS[e])});var x=$(l).parent()[0].getAttribute("nodeId"),E=$(a).parent()[0].getAttribute("nodeId");d.setAttribute("node1Id",x),d.setAttribute("node2Id",E);var y={node1:l,node2:a,lineSvg:d,weight:n.weight};y=$.extend(!0,{},y,n),MAIN_GRAPHS[e].allSVGEdges||(MAIN_GRAPHS[e].allSVGEdges=[]),MAIN_GRAPHS[e].allSVGEdges.push(y),1!=r&&(MAIN_GRAPHS[e].allEdges.push({source:x,target:E,weight:n.weight}),formGraphMatrix(MAIN_GRAPHS[e])),$("#"+e+"Area .svgContainer").append(d),bringNodesToFront(e)}function updateLinesPositions(e){e||(e=CUURENT_OPEN_GRAPH);for(var t=MAIN_GRAPHS[e].allSVGEdges,i=0;i<t.length;i++){var n=t[i].node1,r=t[i].node2,l=$(t[i].lineSvg).find(".nodesLine")[0],a=0,s=0;if(l.hasClass("loop")){var o=parseFloat(n.getAttribute("cx")),d=parseFloat(n.getAttribute("cy"));a=o-52,s=d-30;var g="M"+o+" "+d+" c 0 -140, -140 60, 0 0";l.setAttribute("d",g)}else{l.setAttribute("x1",n.getAttribute("cx")),l.setAttribute("y1",n.getAttribute("cy")),l.setAttribute("x2",r.getAttribute("cx")),l.setAttribute("y2",r.getAttribute("cy"));var u=parseFloat(n.getAttribute("cx")),c=parseFloat(n.getAttribute("cy"));a=(u+parseFloat(r.getAttribute("cx")))/2,s=(c+parseFloat(r.getAttribute("cy")))/2}var A=$(t[i].lineSvg).find(".edgeWeight")[0];A.setAttribute("x",a-10),A.setAttribute("y",s-5);var p=$(t[i].lineSvg).find("ellipse")[0];p.setAttribute("cx",a),p.setAttribute("cy",s);var v=p.getAttribute("rx"),b=$(t[i].lineSvg).find("rect")[0];b.setAttribute("x",a-v),b.setAttribute("y",s-v-25);var h=$(t[i].lineSvg).find(".buttons.edit")[0];h.setAttribute("x",a-2),h.setAttribute("y",s-27);var f=$(t[i].lineSvg).find(".buttons.delete")[0];f.setAttribute("x",a+15),f.setAttribute("y",s-27)}}function hackSVG(){SVGElement&&SVGElement.prototype&&(SVGElement.prototype.hasClass=function(e){return new RegExp("(\\s|^)"+e+"(\\s|$)").test(this.getAttribute("class"))},SVGElement.prototype.addClass=function(e){this.hasClass(e)||this.setAttribute("class",this.getAttribute("class")+" "+e)},SVGElement.prototype.removeClass=function(e){var t=this.getAttribute("class").replace(new RegExp("(\\s|^)"+e+"(\\s|$)","g"),"$2");this.hasClass(e)&&this.setAttribute("class",t)},SVGElement.prototype.toggleClass=function(e){this.hasClass(e)?this.removeClass(e):this.addClass(e)})}function showNodeTooltip(e,t){var i=e.target,n=$(i).parent().find("circle")[0],r=$(n).parent().find("rect")[0];if("hidden"==r.getAttribute("visibility")){var l=n.getAttribute("r"),a=n.getAttribute("cx")-l,s=n.getAttribute("cy")-l-10;r.setAttributeNS(null,"x",a),r.setAttributeNS(null,"y",s),r.setAttributeNS(null,"visibility","visible");for(var o=$(n).parent().find(".buttons"),d=0;d<o.length;d++)o[d].setAttributeNS(null,"visibility","visible")}else if(1!=t){r.setAttributeNS(null,"visibility","hidden");for(var o=$(n).parent().find(".buttons"),d=0;d<o.length;d++)o[d].setAttributeNS(null,"visibility","hidden")}}function showEdgeTooltip(e,t){var i=e.target,n=$(i).parent().find("ellipse")[0],r=$(i).parent().find("rect")[0];if("hidden"==r.getAttribute("visibility")){var l=n.getAttribute("rx"),a=n.getAttribute("cx")-l,s=n.getAttribute("cy")-l-25;r.setAttributeNS(null,"x",a),r.setAttributeNS(null,"y",s),r.setAttributeNS(null,"visibility","visible");for(var o=$(n).parent().find(".buttons"),d=0;d<o.length;d++)o[d].setAttributeNS(null,"visibility","visible")}else if(1!=t){r.setAttributeNS(null,"visibility","hidden");for(var o=$(n).parent().find(".buttons"),d=0;d<o.length;d++)o[d].setAttributeNS(null,"visibility","hidden")}}function hideNodeTooltip(e){var t=e.target;$(t).parent().find("rect")[0].setAttributeNS(null,"visibility","hidden");for(var i=$(t).parent().find(".buttons"),n=0;n<i.length;n++)i[n].setAttributeNS(null,"visibility","hidden")}function hideAllNodeTooltip(e){for(var t=e.target,i=$(t).find("rect"),n=0;n<i.length;n++)i[n].setAttributeNS(null,"visibility","hidden");for(var r=$(t).find(".buttons"),n=0;n<r.length;n++)r[n].setAttributeNS(null,"visibility","hidden")}function setConnectIcon(e,t){for(var i=e.target,n=$(i).parent().parent().find(".buttons.connect"),r=0;r<n.length;r++)1==t?(n[r].setAttributeNS(null,"href","img/connect-to.png"),n[r].setAttributeNS(null,"xlink",'href = "img/connect-to.png"')):(n[r].setAttributeNS(null,"href","img/connect-from.png"),n[r].setAttributeNS(null,"xlink",'href = "img/connect-from.png"'))}function deleteEdge(e,t,i){for(var n=MAIN_GRAPHS[e].allSVGEdges,r=0;r<n.length;r++){var l=$(n[r].node1).parent()[0].getAttribute("nodeId"),a=$(n[r].node2).parent()[0].getAttribute("nodeId");(t==l&&i==a||t==a&&i==l)&&(n[r].lineSvg.remove(),n.splice(r,1))}n=MAIN_GRAPHS[e].allEdges;for(r=0;r<n.length;r++){var s=n[r].source,o=n[r].target;(t==s&&i==o||t==o&&i==s)&&n.splice(r,1)}}function deleteAllConnectedEdges(e,t){for(var i=MAIN_GRAPHS[e].allSVGEdges,n=0;n<i.length;n++){var r=$(i[n].node1).parent()[0].getAttribute("nodeId"),l=$(i[n].node2).parent()[0].getAttribute("nodeId");t!=r&&t!=l||(i[n].lineSvg.remove(),i.splice(n,1),n--)}i=MAIN_GRAPHS[e].allEdges;for(n=0;n<i.length;n++){var a=i[n].source,s=i[n].target;t!=a&&t!=s||(i.splice(n,1),n--)}}function editEdgeWeight(e,t,i){for(var n=MAIN_GRAPHS[e].allSVGEdges,r=0;r<n.length;r++){var l=$(n[r].node1).parent()[0].getAttribute("nodeId"),a=$(n[r].node2).parent()[0].getAttribute("nodeId");if(t==l&&i==a||t==a&&i==l){n[r].weight=EDGE_WEIGHT;var s=n[r].lineSvg;null==EDGE_WEIGHT?$($(s).find(".edgeWeight")[0]).text(""):$($(s).find(".edgeWeight")[0]).text(n[r].weight);break}}n=MAIN_GRAPHS[e].allEdges;for(r=0;r<n.length;r++){var o=n[r].source,d=n[r].target;if(t==o&&i==d||t==d&&i==o){n[r].weight=EDGE_WEIGHT;break}}}function setChartInfoSubPanel(e){var t='<div class="chartGeneralInfo subPanel" >';t+='<div class="subPanelTitle row">General Information</div><div class="row title">Graph Name: '+MAIN_GRAPHS[e].graphTitle+"</div>",t+='<div class="row "> <div class="cell"># of Nodes: '+MAIN_GRAPHS[e].getGraphSize()+'</div> <div class="cell"># of Edges: '+MAIN_GRAPHS[e].allEdges.length+"</div></div>",t+='</div><div class="left-panel-header">Result</div><div id="panel-result"></div>',$("#secondPageInfoPanel").append($(t))}function createSubInfoPanel(e,t){var i='<div class="subPanel" ><div class="controlButtons" ><div class="minBtn" onClick="minimizeSubPanel(this)"></div><div class="closeBtn" onClick="closeSubPanel(this)"></div></div>';i+='<div class="subPanelTitle row">'+t.title+"</div>";for(var n=0;n<t.rows.length;n++){var r=t.rows[n];i+='<div class="row"><div class="rowLable">'+r.label+' : </div><div class="rowValue">'+r.value+"</div></div>"}i+="</div>",$("#panel-result").append($(i))}function minimizeSubPanel(e){var t=$(e),i=t.parent().parent();t.hasClass("max")?(t.removeClass("max"),i.css("max-height","initial")):(t.addClass("max"),i.css("max-height","22px"))}function closeSubPanel(e){$(e).parent().parent().remove()}function reColorNodes(e,t){var i=MAIN_GRAPHS[e].allNodes,n=MAIN_GRAPHS[e].allSVGNodes;if(t)for(a=0;a<n.length;a++){var r=n[a],l=t[a]>=0?COLORS_LIST[t[a]]:"#fff";$($($(r.nodeSvg)[0]).find(".node")[0]).attr("fill",l)}else for(var a=0;a<n.length;a++){var r=n[a],l=null!=i[a].color?i[a].color:DEFAULT_NODE_COLOR;$($($(r.nodeSvg)[0]).find(".node")[0]).attr("fill",l)}}function isNodeNameUsed(e,t){for(var i=MAIN_GRAPHS[e].allNodes,n=0;n<i.length;n++)if(i[n].name==t)return!0;return!1}
// Planner Test
function isBipartite(e){var t=$.extend(!0,{},GraphTraverser);return t.createGraphTraverser(e),t.isBipartite()}function addGraphs(e,t){var r=$.extend(!0,{},Graph),i=e.getVertices();for(v in i){var s=e.getNeighbors(i[v]);for(u in s)r.addEdge(i[v],s[u])}i=t.getVertices();for(v in i){s=t.getNeighbors(i[v]);for(u in s)r.addEdge(i[v],s[u])}return r}function splitIntoPieces(e,t){var r=$.extend(!0,{},GraphTraverser);return r.createGraphTraverser(e),r.splitIntoPieces(t)}function isPath(e){var t=0,r=e.getVertices();for(v in r){var i=e.getDegree(r[v]);if(1==i)t++;else if(2!=i)return!1}return 2==t}function testPlanarity(e,t){if(e.numEdges()>3*e.numVertices()-6)return!1;var r=["xbyb","bybx","ybxb","bxby"],i=splitIntoPieces(e,t);for(piece in i)if(!isPath(i[piece])){var s=null,a=t.getVertices();for(E in a)if(i[piece].hasVertex(a[E])){s=a[E];break}var n=$.extend(!0,{},Graph);n.createGraph(t);var h=s,c=t.getNeighbors(h)[0];for(n.removeEdge(h,c);!i[piece].hasVertex(c);){var d=t.getNeighbors(c);for(E in d)if(d[E]!=h){h=c,c=d[E];break}n.removeEdge(h,c)}var u=c;(j=$.extend(!0,{},GraphTraverser)).createGraphTraverser(i[piece]);var o=j.findPath(s,u,t.getVertices());if(!testPlanarity(addGraphs(t,i[piece]),addGraphs(n,o)))return!1}for(var g=$.extend(!0,{},Graph),p=i,f=0;f<p.length;f++)for(var v=p[f],l=f+1;l<p.length;l++){var y=p[l],x=" ",V="",b=0,j=$.extend(!0,{},GraphTraverser);j.createGraphTraverser(t);for(var M=0;M<t.numVertices();M++){var E=j.walkCycle();v.hasVertex(E)&&y.hasVertex(E)?(b++,V+="b",x="b"):v.hasVertex(E)&&"x"!=x?(V+="x",x="x"):y.hasVertex(E)&&"y"!=x&&(V+="y",x="y")}"x"!=x&&"y"!=x||V.charAt(0)!=x||(V=V.substring(1));var G=!1;V.length>4||b>2?G=!0:4!=V.length||r.includes(V)||(G=!0),G&&g.addEdge(f,l)}return isBipartite(g)}var Graph=new function(){this.adjacencyMap={},this.createGraphFromEdges=function(e){for(var t=0;t<e.length;t++){var r=e[t].source,i=e[t].target;r!=i&&this.addEdge(r,i)}},this.createGraph=function(e){var t=e.getVertices();for(v in t){var r=e.getNeighbors(t[v]);for(u in r)this.addEdge(t[v],r[u])}},this.addVertex=function(e){void 0===this.adjacencyMap[e]&&(this.adjacencyMap[e]=[])},this.addEdge=function(e,t){this.addVertex(e),this.addVertex(t),this.adjacencyMap[e].includes(t)||this.adjacencyMap[e].push(t),this.adjacencyMap[t].includes(e)||this.adjacencyMap[t].push(e)},this.removeEdge=function(e,t){if(this.hasEdge(e,t)&&this.hasEdge(t,e)){var r=this.adjacencyMap[e],i=r.indexOf(t);i>-1&&r.splice(i,1),this.adjacencyMap[e]=r,(i=(r=this.adjacencyMap[t]).indexOf(e))>-1&&r.splice(i,1),this.adjacencyMap[t]=r,0==this.adjacencyMap[e].length&&delete this.adjacencyMap[e],0==this.adjacencyMap[t].length&&delete this.adjacencyMap[t]}},this.numVertices=function(){var e=0;for(key in this.adjacencyMap)e++;return e},this.numEdges=function(){var e=0;for(key in this.adjacencyMap)e+=this.adjacencyMap[key].length;return e/2},this.getNeighbors=function(e){return this.adjacencyMap[e]?this.adjacencyMap[e]:[]},this.getDegree=function(e){return this.adjacencyMap[e]?this.adjacencyMap[e].length:-1},this.getVertices=function(){var e=[];for(var t in this.adjacencyMap)e.push(t);return e},this.hasVertex=function(e){return!!this.adjacencyMap[e]},this.hasEdge=function(e,t){return!(!this.adjacencyMap[e]||!this.adjacencyMap[e].includes(t))},this.print=function(){console.log("");var e="";for(k in this.adjacencyMap){e=k+":";var t=this.adjacencyMap[k];for(v in t)e+=" "+t[v];console.log(e)}},this.isCycle=function(e){var t=e.numVertices()>2,r=e.getVertices();for(v in r)t=t&&2==e.getDegree(r[v]);return t},this.subtractGraphs=function(e,t){var r=$.extend(!0,{},Graph);r.createGraph(e);var i=t.getVertices();for(v in i){var s=t.getNeighbors(i[v]);for(u in s)r.removeEdge(i[v],s[u])}return r}},GraphTraverser=new function(){this.graph,this.searched=[],this.coloring={},this.result=[],this.goal=null,this.next=null,this.prev=null,this.createGraphTraverser=function(e){this.graph=e},this.isBipartite=function(){return 0==this.graph.numVertices()||(this.coloring={},this.isBipartite1(this.graph.getVertices()[0],!0))},this.isBipartite1=function(e,t){if(this.coloring[e])return this.coloring[e]==(t?1:0);this.coloring[e]=t?1:0;var r=!0,i=this.graph.getNeighbors(e);for(n in i)r=r&&this.isBipartite1(i[n],!t);return r},this.walkCycle=function(){if(null==this.next)this.prev=this.graph.getVertices()[0],this.next=this.graph.getNeighbors(this.prev)[0];else{var e=this.graph.getNeighbors(this.next);for(n in e)if(e[n]!=this.prev){this.prev=this.next,this.next=e[n];break}}return this.prev},this.findPath=function(e,t,r){this.searched=[];for(var i=0;i<r.length;i++)this.searched.push(r[i]);return this.result=$.extend(!0,{},Graph),this.goal=t,this.findPath1(e)?this.result:null},this.findPath1=function(e){this.searched.push(e);var t=this.graph.getNeighbors(e);for(n in t){var r=t[n];if(r==this.goal)return this.result.addEdge(e,r),!0;if(!this.searched.includes(r)){if(this.result.addEdge(e,r),this.findPath1(r))return!0;this.result.removeEdge(e,r)}}return!1},this.findCycle=function(){return this.searched=[],this.result=$.extend(!0,{},Graph),this.goal=this.graph.getVertices()[0],this.findCycle1(this.goal)},this.findCycle1=function(e){this.searched.push(e);var t=this.graph.getNeighbors(e);for(n in t){if(t[n]==this.goal&&this.result.numVertices()>2)return this.result.addEdge(e,t[n]),this.result;if(!this.searched.includes(t[n])){this.result.addEdge(e,t[n]);var r=this.findCycle1(t[n]);if(null!=r)return r;this.result.removeEdge(e,t[n])}}return null},this.splitIntoPieces=function(e){this.searched=[];var t=[],r=e.getVertices();for(v in r){this.searched.push(r[v]);var i=this.graph.getNeighbors(r[v]);for(n in i)this.searched.includes(i[n])||e.hasEdge(i[n],r[v])||(this.result=$.extend(!0,{},Graph),this.result.addEdge(r[v],i[n]),this.makePiece(e,i[n]),t.push(this.result))}return t},this.makePiece=function(e,t){if(!e.hasVertex(t)){this.searched.push(t);var r=this.graph.getNeighbors(t);for(n in r)this.result.hasEdge(r[n],t)||(this.result.addEdge(t,r[n]),this.makePiece(e,r[n]))}}};
// Cycles Founder
var AdjacencyList=new function(){this.getAdjacencyList=function(t){for(var s={},i=0;i<t.length;i++){for(var e=[],n=0;n<t[i].length;n++)1==t[i][n]&&e.push(n);s[i]=[];for(n=0;n<e.length;n++)s[i].push(e[n])}return s}},ElementaryCyclesSearch=new function(){this.cycles=null,this.adjList=null,this.graphNodes=null,this.blocked=null,this.B=null,this.stack=null,this.sizee=0,this.createElementaryCyclesSearch=function(t,s){this.graphNodes=s;var i=$.extend(!0,{},AdjacencyList);this.adjList=i.getAdjacencyList(t),this.sizee=0;for(key in this.adjList)this.sizee++},this.getElementaryCycles=function(){this.cycles=[],this.blocked=[],this.B=zeroMatrix([this.sizee,0]);for(key in this.adjList)this.blocked.push(!1);this.stack=[];var t=$.extend(!0,{},StrongConnectedComponents);t.createStrongConnectedComponents(this.adjList);for(var s=0;;){var i=t.getAdjacencyList(s);if(null==i||null==i.getAdjList())break;var e=i.getAdjList();s=i.getLowestNodeId();for(var n=0;n<e.length;n++)null!=e[n]&&e[n].length>0&&(this.blocked[n]=!1,this.B[n]=[]);this.findCycles(s,s,e),s++}return this.cycles},this.findCycles=function(t,s,i){var e=!1;this.stack.push(t),this.blocked[t]=!0;for(r=0;r<i[t].length;r++)if((o=i[t][r])==s){for(var n=[],h=0;h<this.stack.length;h++){var l=this.stack[h];n.push(this.graphNodes[l])}this.cycles.push(n),e=!0}else this.blocked[o]||this.findCycles(o,s,i)&&(e=!0);if(e)this.unblock(t);else for(var r=0;r<i[t].length;r++){var o=i[t][r];this.B[o].includes(t)||this.B[o].push(t)}for(var a=0;a<this.stack.length;a++)if(this.stack[a]==t){this.stack.splice(a,1);break}return e},this.unblock=function(t){this.blocked[t]=!1;for(var s=this.B[t];s.length>0;){var i=s[0];s.splice(0,1),this.blocked[i]&&this.unblock(i)}}},SCCResult=new function(){this.nodeIDsOfSCC=null,this.adjList=null,this.lowestNodeId=-1,this.createSCCResult=function(t,s){if(this.adjList=t,this.lowestNodeId=s,this.nodeIDsOfSCC=[],null!=this.adjList){var i=0;for(key in this.adjList)i++;for(var e=this.lowestNodeId;e<i;e++)this.adjList[e].length>0&&this.nodeIDsOfSCC.push(e)}},this.getAdjList=function(){return this.adjList},this.getLowestNodeId=function(){return this.lowestNodeId}},StrongConnectedComponents=new function(){this.adjListOriginal=null,this.adjList=null,this.visited=null,this.stack=null,this.lowlink=null,this.number=null,this.sccCounter=0,this.currentSCCs=null,this.sizee=0,this.createStrongConnectedComponents=function(t){this.adjListOriginal=t,this.sizee=0;for(key in this.adjListOriginal)this.sizee++},this.getAdjacencyList=function(t){this.visited=[],this.lowlink=[],this.number=[];for(s=0;s<this.sizee;s++)this.visited.push(!1),this.lowlink.push(0),this.number.push(0);this.stack=[],this.currentSCCs=[],this.makeAdjListSubgraph(t);for(var s=t;s<this.sizee;s++)if(!this.visited[s]){this.getStrongConnectedComponents(s);var i=this.getLowestIdComponent();if(null!=i&&!i.includes(t)&&!i.includes(t+1))return this.getAdjacencyList(t+1);var e=this.getAdjList(i);if(null!=e)for(var n=0;n<this.sizee;n++)if(e[n].length>0){var h=$.extend(!0,{},SCCResult);return h.createSCCResult(e,n),h}}return null},this.makeAdjListSubgraph=function(t){this.adjList=zeroMatrix([this.sizee,0]);for(var s=t;s<this.adjList.length;s++){for(var i=[],e=0;e<this.adjListOriginal[s].length;e++)this.adjListOriginal[s][e]>=t&&i.push(this.adjListOriginal[s][e]);if(i.length>0){this.adjList[s]=[];for(var n=0;n<i.length;n++)this.adjList[s].push(0);for(e=0;e<i.length;e++){var h=i[e];this.adjList[s][e]=h}}}},this.getLowestIdComponent=function(){for(var t=this.adjList.length,s=null,i=0;i<this.currentSCCs.length;i++)for(var e=this.currentSCCs[i],n=0;n<e.length;n++){var h=e[n];h<t&&(s=e,t=h)}return s},this.getAdjList=function(t){var s=null;if(null!=t){s={};for(var i=0;i<this.adjList.length;i++)s[i]=[];for(var e=0;e<t.length;e++)for(var n=t[e],h=0;h<this.adjList[n].length;h++){var l=this.adjList[n][h];t.includes(l)&&s[n].push(l)}}return s},this.getStrongConnectedComponents=function(t){this.sccCounter++,this.lowlink[t]=this.sccCounter,this.number[t]=this.sccCounter,this.visited[t]=!0,this.stack.push(t);for(var s=0;s<this.adjList[t].length;s++){var i=this.adjList[t][s];this.visited[i]?this.number[i]<this.number[t]&&this.stack.includes(i)&&(this.lowlink[t]=Math.min(this.lowlink[t],this.number[i])):(this.getStrongConnectedComponents(i),this.lowlink[t]=Math.min(this.lowlink[t],this.lowlink[i]))}if(this.lowlink[t]==this.number[t]&&this.stack.length>0){var e=-1,n=[];do{e=this.stack[this.stack.length-1],this.stack.splice(this.stack.length-1,1),n.push(e)}while(this.number[e]>this.number[t]);n.length>1&&this.currentSCCs.push(n)}}};
// Euler Methods
function printEuler(e,t){if(!isConnected(e))return console.log("Graph is not Eulerian"),MAIN_GRAPHS[t].isEulerian=!1,MAIN_GRAPHS[t].isEulerPath=!1,void(MAIN_GRAPHS[t].AllEulerTours=[]);var r=getOddDegVertex(e);if(r.length>2||1==r.length)return console.log("Graph is not Eulerian"),MAIN_GRAPHS[t].isEulerian=!1,MAIN_GRAPHS[t].isEulerPath=!1,void(MAIN_GRAPHS[t].AllEulerTours=[]);var n;if(2==r.length){var s=r[0],i=r[1];n=s.degree<i.degree?s:i,allEulerPathesList=[],(subPath=[]).push(n),findEulerPaths(n),validateEulerTour(allEulerPathesList,MAIN_GRAPHS[t].allEdges.length),reversePaths(allEulerPathesList),MAIN_GRAPHS[t].isEulerian=!0,MAIN_GRAPHS[t].isEulerPath=!0,MAIN_GRAPHS[t].AllEulerTours=$.extend(!0,[],allEulerPathesList)}else{var l=null;n=e.verts[0];for(a=0;a<MAIN_GRAPHS[t].allNodes.length;a++)if(MAIN_GRAPHS[t].allNodes[a].id==FROM_NODE_ID){l=MAIN_GRAPHS[t].allNodes[a].name;break}if(null!=l)for(var a=0;a<e.verts.length;a++)if(e.verts[a].name==l){n=e.verts[a];break}allEulerPathesList=[],(subPath=[]).push(n),findEulerPaths(n),validateEulerTour(allEulerPathesList,MAIN_GRAPHS[t].allEdges.length),MAIN_GRAPHS[t].isEulerian=!0,MAIN_GRAPHS[t].isEulerPath=!0,MAIN_GRAPHS[t].AllEulerTours=$.extend(!0,[],allEulerPathesList)}}function reversePaths(e){for(var t=e.length,r=0;r<t;r++){var n=$.extend(!0,[],e[r]);n.reverse(),e.push(n)}}function findEulerPaths(e){for(var t=!0,r=0;r<e.Adj.length;r++){var n=e.Adj[r];if(0==n.seen){n.seen=!0;var s=n.otherEnd(e);subPath.push(s),findEulerPaths(s),n.seen=!1,subPath.pop(),t=!1}}if(r==e.Adj.length&&t){for(var i=[],l=0;l<subPath.length;l++)i.push(subPath[l].name);allEulerPathesList.push(i)}}function prepareToPrint(e,t,r,n){MAIN_GRAPHS[e].isEulerian=!0,MAIN_GRAPHS[e].isEulerPath=!n,MAIN_GRAPHS[e].AllEulerTours=[];var s=[];s.push(t);for(var i=t,l=0;l<r.length;l++){var a=r[l].otherEnd(i);s.push(a),i=a}MAIN_GRAPHS[e].AllEulerTours.push(s)}function isConnected(e){var t=e.verts[1];if(void 0===t)return!1;BFS(t);for(var r=0;r<e.verts.length;r++)if(!e.verts[r].seen)return!1;return!0}function BFS(t){var r=[];for(r.push(t);0!=r.length;){var n=r.shift();n.seen=!0;for(e in n.Adj){var s=n.Adj[e].otherEnd(n);s.seen||r.push(s)}}}function getOddDegVertex(e){for(var t=[],r=0;r<e.verts.length;r++){var n=e.verts[r];n.degree%2!=0&&t.push(n)}return t}function findEulerTour(e){for(var t=[],r=[],n=e.getUnvisitedEdge(),s=e;null!=n;)n.seen=!0,t.unshift(n),n=(s=n.otherEnd(s)).getUnvisitedEdge();for(;0!=t.length;){n=t.shift(),r.push(n);var i=(s=n.From).getUnvisitedEdge();for(null==i&&(i=(s=n.To).getUnvisitedEdge()),n=i;null!=n;)n.seen=!0,t.unshift(n),n=(s=n.otherEnd(s)).getUnvisitedEdge()}return r.reverse(),r}function verifyTour(t,r,n){if(r.length!=t.numEdges)return!1;t.initialize();var s=0;for(e in r){if(r[e].From.name!=n.name&&r[e].To.name!=n.name||r[e].seen)break;s++,n=r[e].otherEnd(n),r[e].seen=!0}return s==t.numEdges}function validateEulerTour(e,t){for(var r=0;r<e.length;r++)e[r].length!=t+1&&e.splice(r--,1)}function TestForEuler(e){var t=MAIN_GRAPHS[e].allNodes.length,r=MAIN_GRAPHS[e].allEdges.length,n=$.extend(!0,{},E_Graph);n.createEulerGraph(t);for(s=0;s<MAIN_GRAPHS[e].allNodes.length;s++)n.addVertix(MAIN_GRAPHS[e].allNodes[s].name);for(var s=0;s<r;s++){var i=MAIN_GRAPHS[e].allEdges[s].source,l=getNodeOfId(e,i).name,a=MAIN_GRAPHS[e].allEdges[s].target,h=getNodeOfId(e,a).name,o=MAIN_GRAPHS[e].allEdges[s].weight;n.addEdge(l,h,o)}printEuler(n,e)}function TestForHamilton(e){var t=MAIN_GRAPHS[e].allNodes.length,r=MAIN_GRAPHS[e].allEdges.length,n=$.extend(!0,{},E_Graph);n.createEulerGraph(t);for(s=0;s<MAIN_GRAPHS[e].allNodes.length;s++)n.addVertix(MAIN_GRAPHS[e].allNodes[s].name);for(var s=0;s<r;s++){var i=MAIN_GRAPHS[e].allEdges[s].source,l=getNodeOfId(e,i).name,a=MAIN_GRAPHS[e].allEdges[s].target,h=getNodeOfId(e,a).name,o=MAIN_GRAPHS[e].allEdges[s].weight;n.addEdge(l,h,o)}findHamilton(n,e)}function findHamilton(e,t){if(!isConnected(e))return console.log("Graph is not Hamiltonian"),MAIN_GRAPHS[t].isHamiltonian=!1,MAIN_GRAPHS[t].AllHamiltonPaths=[],void(MAIN_GRAPHS[t].AllHamiltonTours=[]);for(var r,n=0;n<e.verts.length;n++)e.initializeNodes(),r=e.verts[n],allHamiltonPathesList=[],allHamiltonCyclesList=[],subPath=[],findHamiltonPathsCycles(r,e.verts.length),MAIN_GRAPHS[t].AllHamiltonPaths=MAIN_GRAPHS[t].AllHamiltonPaths.concat(allHamiltonPathesList),MAIN_GRAPHS[t].AllHamiltonTours=MAIN_GRAPHS[t].AllHamiltonTours.concat(allHamiltonCyclesList);MAIN_GRAPHS[t].AllHamiltonPaths.length>0||MAIN_GRAPHS[t].AllHamiltonTours.length>0?MAIN_GRAPHS[t].isHamiltonian=!0:MAIN_GRAPHS[t].isHamiltonian=!1}function findHamiltonPathsCycles(e,t){subPath.push(e),e.seen=!0;for(var r=!0,n=0;n<e.Adj.length;n++)0==(h=(a=e.Adj[n]).otherEnd(e)).seen&&(findHamiltonPathsCycles(h,t),h.seen=!1,subPath.pop(),r=!1);if(r&&subPath.length==t){for(var s=[],i=0;i<subPath.length;i++)s.push(subPath[i].name);allHamiltonPathesList.push(s);for(var l=0;l<e.Adj.length;l++){var a=e.Adj[l],h=a.otherEnd(e);if(h==subPath[0]){var o=$.extend(!0,[],s);o.push(subPath[0].name),allHamiltonCyclesList.push(o);break}}}}var E_Edge=new function(){this.From,this.To,this.Weight,this.seen=!1,this.createEulerEdge=function(e,t,r){this.From=e,this.To=t,this.Weight=r,this.seen=!1},this.otherEnd=function(e){return this.From==e?this.To:this.From},this.toString=function(){return"("+this.From+","+this.To+")"}},E_Vertex=new function(){this.name,this.seen,this.parent,this.distance,this.Adj=[],this.degree,this.createEulerVertex=function(e){this.name=e,this.seen=!1,this.Adj=[],this.parent=null,this.degree=0},this.getUnvisitedEdge=function(){for(var e=0;e<this.Adj.length;e++){var t=this.Adj[e];if(0==t.seen)return t}return null},this.hasUnvisitedEdge=function(){for(var e=0;e<this.Adj.length;e++)if(0==this.Adj[e].seen)return!0;return!1},this.toString=function(){return this.name}},E_Graph=new function(){this.verts=[],this.numNodes,this.numEdges,this.createEulerGraph=function(e){this.numNodes=e,this.numEdges=0,this.verts=[]},this.addVertix=function(e){var t=$.extend(!0,{},E_Vertex);t.createEulerVertex(e),this.verts.push(t)},this.addEdge=function(e,t,r){var n=this.getVertixFromList(e);null==n&&((n=$.extend(!0,{},E_Vertex)).createEulerVertex(e),this.verts.push(n));var s=this.getVertixFromList(t);null==s&&((s=$.extend(!0,{},E_Vertex)).createEulerVertex(t),this.verts.push(s));var i=$.extend(!0,{},E_Edge);i.createEulerEdge(n,s,r),n.Adj.push(i),s.Adj.push(i),this.numEdges++,n.degree++,s.degree++},this.getVertixFromList=function(e){for(var t=0;t<this.verts.length;t++)if(this.verts[t].name==e)return this.verts[t];return null},this.initialize=function(){for(var e=0;e<this.verts.length;e++)for(var t=this.verts[e],r=0;r<t.Adj.length;r++)t.Adj[r].seen=!1},this.initializeNodes=function(){for(var e=0;e<this.verts.length;e++)this.verts[e].seen=!1}},allEulerPathesList=[],subPath=[],allHamiltonPathesList=[],allHamiltonCyclesList=[];
// Shortest Path
var DiVertex=new function(){this.id,this.name,this.createDiVertex=function(t,e){this.id=t,this.name=e},this.getId=function(){return this.id},this.getName=function(){return this.name},this.hashCode=function(){var t=1;return t=31*t+(null==this.id?0:this.id.hashCode())},this.equals=function(t){return this.id==t.id},this.toString=function(){return this.name}},DiEdge=new function(){this.id,this.source,this.destination,this.weight,this.createDiEdge=function(t,e,i,s){this.id=t,this.source=e,this.destination=i,this.weight=s},this.getId=function(){return this.id},this.getDestination=function(){return this.destination},this.getSource=function(){return this.source},this.getWeight=function(){return this.weight},this.toString=function(){return this.source+" "+this.destination}},DiGraph=new function(){this.vertexes,this.edges,this.createDiGraph=function(t,e){this.vertexes=t,this.edges=e},this.getVertexes=function(){return this.vertexes},this.getEdges=function(){return this.edges}},DijkstraAlgorithm=new function(){this.nodes,this.edges,this.settledNodes,this.unSettledNodes,this.predecessors,this.distance,this.createDijkstraAlgorithm=function(t){this.nodes=$.extend(!0,[],t.getVertexes()),this.edges=$.extend(!0,[],t.getEdges())},this.execute=function(t){for(this.settledNodes=[],this.unSettledNodes=[],this.distance={},this.predecessors={},this.distance[t]=0,this.pushToSet(this.unSettledNodes,t);this.unSettledNodes.length>0;){var e=this.getMinimum(this.unSettledNodes);this.pushToSet(this.settledNodes,e);var i=this.unSettledNodes.indexOf(e);this.unSettledNodes.splice(i,1),this.findMinimalDistances(e)}},this.findMinimalDistances=function(t){var e=this.getNeighbors(t);for(key in e){var i=e[key];this.getShortestDistance(i)>this.getShortestDistance(t)+this.getDistance(t,i)&&(this.distance[i]=this.getShortestDistance(t)+this.getDistance(t,i),this.predecessors[i]=t,this.pushToSet(this.unSettledNodes,i))}},this.getDistance=function(t,e){for(key in this.edges){var i=this.edges[key];if(i.getSource().id==t.id&&i.getDestination().id==e.id||i.getSource().id==e.id&&i.getDestination().id==t.id)return i.getWeight()}console.log("Error, Should not happen")},this.getNeighbors=function(t){var e=[];for(key in this.edges){var i=this.edges[key];i.getSource().id!=t.id||this.isSettled(i.getDestination())?i.getDestination().id!=t.id||this.isSettled(i.getSource())||this.pushToSet(e,i.getSource()):this.pushToSet(e,i.getDestination())}return e},this.getMinimum=function(t){var e=null;for(key in t){var i=t[key];null==e?e=i:this.getShortestDistance(i)<this.getShortestDistance(e)&&(e=i)}return e},this.pushToSet=function(t,e){for(var i=!1,s=0;s<t.length;s++)if(t[s].id==e.id){i=!0;break}0==i&&t.push(e)},this.isSettled=function(t){for(var e=0;e<this.settledNodes.length;e++)if(this.settledNodes[e].id==t.id)return!0;return!1},this.getShortestDistance=function(t){var e=this.distance[t];return null==e?Number.MAX_VALUE:e},this.getPath=function(t){var e=[],i=t;if(null==this.predecessors[i]||void 0===this.predecessors[i])return{path:null,distance:null};for(e.push(i);void 0!==this.predecessors[i];)i=this.predecessors[i],e.push(i);return e.reverse(),{path:e,distance:this.getShortestDistance(t)}}};
