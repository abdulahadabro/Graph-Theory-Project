function getGraphMatrix(){var t=["a","b","c","d"];return{nodes:t,matrix:[[0,1,1,0],[1,0,0,1],[1,0,0,1],[0,1,1,0]],size:t.length}}function formGraphMatrix(t){for(var e=[],r=0;r<t.allNodes.length;r++)e.push(t.allNodes[r].id);t.nodesIds=e;for(var a=e.length,n=zeroMatrix([a,a]),r=0;r<t.allEdges.length;r++)t.allEdges[r].sourceIndex=e.indexOf(t.allEdges[r].source),t.allEdges[r].targetIndex=e.indexOf(t.allEdges[r].target),n[t.allEdges[r].sourceIndex][t.allEdges[r].targetIndex]++,t.allEdges[r].targetIndex!=t.allEdges[r].sourceIndex&&n[t.allEdges[r].targetIndex][t.allEdges[r].sourceIndex]++;return t.graphMatrix={nodesIds:e,matrix:n,size:a},t.graphMatrix}function zeroMatrix(t){for(var e=[],r=0;r<t[0];++r)e.push(1==t.length?0:zeroMatrix(t.slice(1)));return e}function drawGraphByMatrix(t){for(var e=MAIN_GRAPHS[t].allNodes,r=MAIN_GRAPHS[t].graphMatrix.matrix,a=[],n=0;n<e.length;n++){var i=$.extend(!0,{},{x:100,y:50},e[n]);a.push(addNode(t,i))}for(n=0;n<e.length;n++)for(var l=0;l<e.length;l++)if(1==r[n][l]){var s=getEdgeOptions(t,a[n],a[l]);connectTwoNodes(t,a[n],a[l],s,!0)}bringNodesToFront(t),randomlySpreadNodes(t)}function bringNodesToFront(t){for(var e=MAIN_GRAPHS[t].allSVGNodes,r=0;r<e.length;r++){var a=e[r].nodeSvg;a.parentElement.appendChild(a)}}function randomlySpreadNodes(t){var e=MAIN_GRAPHS[t].allSVGNodes,r=(MAIN_GRAPHS[t].getGraphSize(),$("#"+t+"Area"));setRandomPos(e,r.parent().width(),r.parent().height()-50,2*MAIN_GRAPHS[t].radius),updateLinesPositions(t)}function updateNodePosition(t,e,r,a,n){t||(t=CUURENT_OPEN_GRAPH),e.nodeSvg&&(e=e.nodeSvg);var i=$(e).find("circle")[0];i.setAttribute("cx",r),i.setAttribute("cy",a);var l=$(e).find("text")[0];l.setAttribute("x",r),l.setAttribute("y",a);var s;s=n||parseFloat(i.getAttribute("r"));var o=$(e).find("rect")[0];o.setAttribute("x",r-s),o.setAttribute("y",a-s-10);var d=$(e).find("ellipse")[0];d.setAttribute("cx",r-s),d.setAttribute("cy",a);var u=$(e).find(".connect")[0];u.setAttribute("x",r-s+2),u.setAttribute("y",a-s-4);var h=$(e).find(".edit")[0];h.setAttribute("x",r-s+2+16),h.setAttribute("y",a-s-4);var g=$(e).find(".delete")[0];g.setAttribute("x",r-s+2+32),g.setAttribute("y",a-s-4)}function setRandomPos(t,e,r,a){var n=new Array;$(t).each(function(){for(var t=!0,i=0;t;){i++,fixLeft=Math.round(Math.random()*(e-2*a))+a/2,fixTop=Math.round(Math.random()*(r-2*a))+a/2,updateNodePosition(void 0,$(this)[0].nodeSvg,fixLeft+a/2,fixTop+a/2);var l={top:fixTop,left:fixLeft,width:a,height:a};t=!1;for(var s=0;s<n.length;s++){if(overlap(l,n[s],a)&&!(i>60)){t=!0;break}t=!1}}n.push(l)})}function overlap(t,e,r){var a=t.left,n=e.top,i=n+t.height,l=a+t.width,s=t.left,o=t.top,d=o+t.height,u=s+t.width,h=r;return!(i+h<o||n>d+h||l+h<s||a>u+h)}function handleNodeKeys(t){if(t.keyList)for(var e=0;e<t.keyList.length;e++){var r=t.keyList[e];if("node"==r.keyFor&&"color"==r.keyName)for(var a=r.id,n=r.keyDefault,i=0;i<t.allNodes.length;i++){var l=t.allNodes[i];null!=l.data&&l.data.key==a&&null!=l.data.value?l.color=l.data.value:null!=n&&(l.color=n)}}}function handleEdgeKeys(t){if(t.keyList)for(var e=0;e<t.keyList.length;e++){var r=t.keyList[e];if("edge"==r.keyFor&&"weight"==r.keyName)for(var a=r.id,n=r.keyDefault,i=0;i<t.allEdges.length;i++){var l=t.allEdges[i];null!=l.data&&l.data.key==a&&(null!=l.data.value?"int"==r.keyType?l.weight=parseInt(l.data.value):l.weight=parseFloat(l.data.value):null!=n&&("int"==r.keyType?l.weight=parseInt(n):l.weight=parseFloat(n)))}}}function getEdgeOptions(t,e,r){for(var a=0;a<MAIN_GRAPHS[t].allEdges.length;a++){var n=MAIN_GRAPHS[t].allEdges[a];if(this.source=null,this.target=null,n.source==e.nodeId&&n.target==r.nodeId||n.source==r.nodeId&&n.target==e.nodeId)return n}return{weight:null}}function isEgdeExistBetweenTwoNodes(t,e,r){for(var a=$(e).parent()[0].getAttribute("nodeId"),n=$(r).parent()[0].getAttribute("nodeId"),i=MAIN_GRAPHS[t].allEdges,l=0;l<i.length;l++){var s=i[l].source,o=i[l].target;if(a==s&&n==o||a==o&&n==s)return!0}return!1}function isEgdeAlreadyDrawn(t,e,r){for(var a=$(e).parent()[0].getAttribute("nodeId"),n=$(r).parent()[0].getAttribute("nodeId"),i=MAIN_GRAPHS[t].allSVGEdges,l=0;l<i.length;l++){var s=i[l].source,o=i[l].target;if(a==s&&n==o||a==o&&n==s)return!0}return!1}function getNodeOfId(t,e){for(var r=MAIN_GRAPHS[t].allNodes,a=0;a<r.length;a++)if(r[a].id==e)return r[a];return null}var GRAPH=new function(){this.id=null,this.edgedefault="undirected",this.graphTitle=null,this.graphId=null,this.graphMatrix=null,this.allNodes=new Array,this.allEdges=new Array,this.radius=30,this.fileContent="",this.allSVGEdges=[],this.allSVGNodes=[],this.keyList=[],this.isBipartite=null,this.isPlanner=null,this.allPathes={},this.allCycles={},this.isEulerian=!1,this.isEulerPath=!1,this.AllEulerTours=[],this.isHamiltonian=!1,this.AllHamiltonPaths=[],this.AllHamiltonTours=[],this.graphMinNumOfColors=null,this.graphColors=null,this.isConnected=!1,this.nodesDegrees={},this.shortestPath=null,this.shortestPathCost=null,this.getGraphSize=function(){return this.allNodes.length}},NODE=new function(){this.id=null,this.name=null,this.data=null,this.color=null},EDGE=new function(){this.id=null,this.source=null,this.target=null,this.weight=null,this.directed=!1,this.data=null},KEY=new function(){this.id=null,this.keyFor=null,this.keyName=null,this.keyType=null,this.keyDefault=null};